package com.aod6060.lwjgl.tests;


import org.lwjgl.Sys;
import org.lwjgl.glfw.Callbacks;
import org.lwjgl.glfw.GLFW;
import org.lwjgl.glfw.GLFWErrorCallback;
import org.lwjgl.glfw.GLFWKeyCallback;
import org.lwjgl.opengl.GL11;

public class Runner {
	
	private GLFWErrorCallback errorCallback;
	private GLFWKeyCallback keyCallback;
	
	private long window;
	private int width = 800;
	private int height = 600;
	
	public void run() {
		System.out.println("Hello LWJGL " + Sys.getVersion() + "!");
		
		try {
			init();
			loop();
			
			GLFW.glfwDestroyWindow(window);
			keyCallback.release();
		} finally {
			//GLFW.glfwDestroyWindow(window);
			GLFW.glfwTerminate();
			errorCallback.release();
		}
	}
	
	
	private void loop() {
		// TODO Auto-generated method stub
		
	}


	private void init() {
		// TODO Auto-generated method stub
		GLFW.glfwSetErrorCallback(errorCallback = Callbacks.errorCallbackPrint(System.err));
		
		if(GLFW.glfwInit() != GL11.GL_TRUE) {
			throw new IllegalStateException("Unable to initialize GLFW");
		}
		
		GLFW.glfwDefaultWindowHints();
		GLFW.glfwWindowHint(GLFW.GLFW_VISIBLE, GL11.GL_FALSE);
		GLFW.glfwWindowHint(GLFW.GLFW_RESIZABLE, GL11.GL_TRUE);
		
		
		window = GLFW.glfwCreateWindow(width, height, "Hello World!", 0, 0);
		
		if(window == 0) {
			throw new RuntimeException("Failed to create the GLFW window.");
		}
		
		GLFW.glfwSetKeyCallback(window, keyCallback = new GLFWKeyCallback() {

			@Override
			public void invoke(long window, int key, int scancode, int action,
					int mods) {
				// TODO Auto-generated method stub
				if(key == GLFW.GLFW_KEY_ESCAPE && action == GLFW.GLFW_RELEASE) {
					GLFW.glfwSetWindowShouldClose(window, GL11.GL_TRUE);
				}
			}
			
		});
	}


	public static void main(String[] args) {
	}
}
